EDU>> trainLSTM('../output/train.10k.id', '../output/valid.3k.id', '../output/test.3k.id', 'de', 'en', '../data/train.10k.de.vocab.1000', '../data/train.10k.en.vocab.1000', '../output', 0, 'logFreq', 1, 'isProfile', 1)
# Loading vocab from file ../data/train.10k.de.vocab.1000 ...
# Loading vocab from file ../data/train.10k.en.vocab.1000 ...
# batchSize = 128
# epochFraction = 0.5
# finetuneEpoch = 3
# initRange = 0.1
# isGradCheck = 0
# isProfile = 1
# learningRate = 1
# logFreq = 1
# lstmSize = 100
# maxGradNorm = 5
# numEpoches = 5
# outDir = ../output
# srcLang = de
# srcVocabFile = ../data/train.10k.de.vocab.1000
# testPrefix = ../output/test.3k.id
# tgtLang = en
# tgtVocabFile = ../data/train.10k.en.vocab.1000
# trainPrefix = ../output/train.10k.id
# validPrefix = ../output/valid.3k.id
# clipForward = 50
# clipBackward = 1000
# isGPU = 0
# nonlinear_gate_f = sigmoid
# nonlinear_gate_f_prime = sigmoidPrime
# nonlinear_f = tanh
# nonlinear_f_prime = tanhPrime
# isBi = 0
# srcVocabSize = 1002
# tgtVocabSize = 1001
# tgtZeroId = 1001
# srcZeroId = 2003
# inVocabSize = 2003
# outVocabSize = 1001
# Load validate data srcFile ../output/valid.3k.id.de and tgtFile ../output/valid.3k.id.en ... numWords=85503
  src: - werden die menschenrechte erneut <unk> <unk> <unk> , um den weg f√ºr die <unk> zu <unk> , was nichts <unk> bedeutet als <unk> <unk> . <eos>
  tgt: - human rights are again being ' <unk> ' to <unk> the way for the <unk> , in other words <unk> <unk> . <eos>
# Load test data srcFile ../output/test.3k.id.de and tgtFile ../output/test.3k.id.en ... numWords=85415
  src: leider <unk> jedoch frieden und <unk> keine so <unk> rolle . <eos>
  tgt: i am <unk> to say , however , that peace and justice are not such key issues . <eos>
# Load train using srcFile "../output/train.10k.id.de" and tgtFile "../output/train.10k.id.en"
  src: <unk> der <unk> <eos>
  tgt: <unk> of the <unk> <eos>
# Epoch 1, lr=1, 06-Nov-2014 16:31:31
epoch=1, iter=1, wps=2.83K, cost=6.90888, gradNorm=39.89, srcMaxLen=83, tgtMaxLen=88, 1.11s, 06-Nov-2014 16:31:32
epoch=1, iter=2, wps=3.15K, cost=6.86686, gradNorm=621.58, srcMaxLen=88, tgtMaxLen=93, 1.16s, 06-Nov-2014 16:31:33
epoch=1, iter=3, wps=3.77K, cost=6.06787, gradNorm=1412.63, srcMaxLen=76, tgtMaxLen=79, 1.06s, 06-Nov-2014 16:31:34
epoch=1, iter=4, wps=3.10K, cost=7.30086, gradNorm=12682.08, srcMaxLen=92, tgtMaxLen=98, 1.25s, 06-Nov-2014 16:31:36
epoch=1, iter=5, wps=3.39K, cost=5.98004, gradNorm=1487.93, srcMaxLen=89, tgtMaxLen=97, 1.43s, 06-Nov-2014 16:31:37
epoch=1, iter=6, wps=3.21K, cost=9.73798, gradNorm=11793.04, srcMaxLen=77, tgtMaxLen=82, 1.05s, 06-Nov-2014 16:31:38
epoch=1, iter=7, wps=3.75K, cost=6.00152, gradNorm=1395.30, srcMaxLen=70, tgtMaxLen=83, 1.00s, 06-Nov-2014 16:31:39
epoch=1, iter=8, wps=2.53K, cost=5.89528, gradNorm=5144.18, srcMaxLen=85, tgtMaxLen=98, 1.41s, 06-Nov-2014 16:31:41
epoch=1, iter=9, wps=2.81K, cost=5.99747, gradNorm=931.81, srcMaxLen=88, tgtMaxLen=87, 1.24s, 06-Nov-2014 16:31:42
epoch=1, iter=10, wps=3.14K, cost=5.29187, gradNorm=1868.64, srcMaxLen=78, tgtMaxLen=93, 1.16s, 06-Nov-2014 16:31:43
